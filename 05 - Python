Baixar e instalar o python
add to path
marcar as opções desejadas
Linguagem de nivel

ctrl + , - atalho  brir as configurações no VS Code

------------------------------------------------

                Entrada e saída de dados

  código do arquivo

print('Hello world!')
print ('Seja bem-vinda(o) ao curso de Python Coding Tank!')

input('Qual é a linguagem de programação que você está estudando?')

----------------------------------------------------
                 Variáveis             

Quando estamos criando um código precisamos guardar alguns dados

Exemplo: Estante -  espaços para guardar coisas

Damos um nome paa variável para saber quais onde precisamos buscar os dados corretos

# é o símbolo de comentário

"""
Três aspas duplas no começo
e mais três no final de um
trecho define comentá 
multiplas linhas
"""

idade = 26 # criando uma variável

print(idade)

texto entre aspas simples

nome = 'Jean Scheibe'

Tipos:

int
float
str
bool

print(type(idade)) # imprime o tipo da variável idade

atribuindo uma entrada a uma variável

linguagem = input('Qual é a linguagem que você está está estudando? ')

print('A linguagem que você está estudando é', linguagem)

---------------------------------------------------------------
                     Operadores Booleanos e aritméticos

Soma +
Subtração -
Multiplicação *
Divisão = 
Divisão inteira = // - Retorna um int , descararta a parte decimal
Resta da divisão: %
Potências: **

# Operadores booleanos

>
<
>=
<=
==
!=

----------------------------------------------
                 Conversão de tipos

idade = '33' # escrito no tipo errado

print(idade, type(idade))

idade_inteira = int(idade)

int()
str()
float()
bool()

altura = float(input('informe sua altura: '))

print(altura, type(altura))

----------------------------------------------

                 Estruturas condicionais


idade = 20

if idade >= 18:
    print('Você é maior de idade')
else:
    print('Você ée idade')

"""
média
"""

media = float(input('Informe a média do estudante'))

if media >= 7:
    print('Você foi aprovado(a)!')
elif media >= 5:
    print('Recuperação')
else:
    print('Você foi reprovado(a)!')

# Considerando a frequência

media = 10
presenca = 100

if media >= 7 and presenca >= 70:
    print('Aprovado!')
else:
    print('Reprovado')

----------------------------------------
       Laços de repetição (while)

Jogo em que o usuário precisa acertar o número pré-definido

numero_sorteado = 15

numero_escolhido  int(input('Escolha um número entre 1 e 20: '))

while numero_escolhido != numero_sorteado:
    print('Você errou o número, tente novamente...')
    numero_escolhido = int(input('informe um número entre 1 e 20: '))

print('Parabéns, você acertou')

Estrutura com contador

contador = 0

while contador < 10:

    print(contador)
    contador = contador + 1

------------------------

        Laços de repetição for
Pode passar um, dois ou três prâmetros

for variavel in range(5): # de 0 até 4 (Valor de parada)
    print(variavel)

for variavel in range(1, 10): # de 1 a 9 (Valor de início e parada)
    print(variavel)

for variavel in range(1, 12, 3): # de 5 a 10 (Valor de início, parada e step)
    print(variavel)

+++++++++

for i in range(1, 4):
    nota = float(input(f'Informe a sua nota {i}'))


variavel acumuladora

soma = 0

for i in range(1, 4):
    nota = float(input(f'Informe a sua nota {i}')) # o f antes da string serve para concatenar o i entre chaves dentro da srting

soma = 0
soma = soma + nota

---------------------------------

              Estrutura de listas

notas = [7.9, 9.7, 8.2]

lista = []
lista = list()
lista [26, 'Jean', False] # posso armazenar qualquer tipo de dados dentro dessa lista

Indexação e slices

lista = [26, 'Jean', False] # posso armazenar qualquer tipo de dados dentro dessa lista

print(lista[0])
print(lista[1])
print(lista[2])


print(lista[-1]) # último elemento
print(lista[-2]) # penúltimo elemento

print(lista([0:3])) # de zero até menor que 3
print(lista[3:]) # imprime de três até o final
print(lista[2:6:2]) # imprime de dois até menor que 6, pulando de dois em dois

for elemento in lista:
    print(elemento)

print('comprimento da lista', len(lista))

for i in range(len(lista))
    print(i)
---------------------------------
         Métodos e funções de listas

lista = [1, 3, 12, 8, 10]

# append - adiciona um item no início da lista

print(lista)

print('Antes do append', lista)
lista.append(3)
print('Depois do append', lista)

# insert - você escolhe em qual posição quer incserir o item

lista.append(2,10)
print('Depois do append', lista)

# extend - junta duas listas

lista2 = [1, 2, 3]

lista.extend(lista2)
print('Depois do extend', lista)

# pop - remove um elemento do final ou aquele que você identificar

lista.pop()
print('Depois do pop', lista)

lista.pop(0)
print('Depois do pop', lista)

# remove - você específica o elemento e não a posição

lista.remove(3)
print('Depois do remove', lista) # ele remove o primeiro que encontra, se houverem vários iguais só o primeiro será removido

# count

print('Quantidade de 2 na lista', lista.count(2))

# index - Te diz o indice de um determinado elemento dentro da lista

print('indice do elemento 12', lista.index(12))

# sort - ordena a lista em ordem crescente

lista.sort()
lista.sort(reverse=True) # ordena do maior para o menor

Funções para lista

# len - número de elementos da lista
# sum - soma de todos os elementos da lista
# max - O maior valor da lista
# min o menor elemento da lista

---------------------------------

         Funções

Trecho de código que será utilizado diversas vezes e pode ser chamado a qualquer momento

# Função inicial

# usamos a palavra reservada def
def saudacao(nome, curso='Pyhon'): # parâmetro curso já definido como Python
    print(f'Seja bem-vinda(o), {nome}!')
    print(f'Olá, é um prazer ter você faendo parte do curso de {}!')

# chamada da função

saudacao('Jean', 'Python')
saudacao('Andress', 'Java')

# Funções com retorno

def soma(num1, num2):
    return num1 + num2

resultado = soma(5, 7)

print('O resultado da soma é', resultado)

def calculadora(num1, num2, operacao='+')
    if operacao == '+'
        return num1 + num2
    elif operacao == '-'
        retrn num1 - num2

resultado = calculadora(10, 20 ,'-')

---------------------------------

         Dicionários

Uma lista com chaves e valores, na qual cada item tem várias características armazenadas

# Dicionários

# para criar um dicionários usamos chaves no lugar de colchetes

dicionario = {}
dicionario = dict{}

dicionario = { 'nome': 'Jean', 'Idade': 26, 'altura': 1.77 }

print(dicionario['idade'])

# Adicionando elementos em um dicionário

dicionario['programador'] = True

dicionario['altura'] = 2 # atribui novo valor a altura

# iterando sobre um dicionario

for chave in dicionario:
    print(chave, dicionario[chave])

# testando a existência de uma chave

print('peso' in dicionario)
print('altura' in dicionario)
